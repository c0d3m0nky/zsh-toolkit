#!/bin/zsh

if [[ -z $ZSHCOM_DSH_USEZSH ]]; then ZSHCOM_DSH_USEZSH=''; fi

dockerShell() {
	if [[ $ZSHCOM_DSH_USEZSH == *${1}* ]]; then
		dockerZsh $1
	else
		docker exec -it $1 bash
	fi
}

perfwatch() {
	# shellcheck disable=SC2016
	sensors | ack -i '^(CPU|MB) Temp:\s+([\+\-\d.]+Â°[CF])' --output '$1:\t$2'
	echo ''
	echo ''
	# shellcheck disable=SC2016
	(cat /proc/cpuinfo | ack "^([c]pu MHz|processor)\s+:\s(.+)$" --output '$2') | ack '(\d+) (\d)(\d+)\.\d+ (\d+) (\d)(\d+)\.\d+ ' --output '$1\t$2.$3  $5.$6\t$4'
}

dockerZsh() {
	docker exec -it "$1" /bin/zsh
}

function pip_install_save {
    pip install "$1" && pip freeze | grep "$1" >> requirements.txt
}

function set_title() {
  echo -e "\033]0;$1\007";
}

# ToDo: exclude ack's pid
function psack () {
  ps aux | ack -v '/ack ' | ack -i $1
}

function fack () {
  if [[ "$1" == "-d" && -z "$2" ]]
  then
    find ./ -type d | ack "$2"
  elif [[ "$1" == "-a" && -z "$2" ]]
  then
    find ./ | ack "$2"
  else
    find ./ -type f | ack "$1"
  fi
}

function findWithExtension() {
  badImg='\.(jpg_.+|r\d+|me-downloaders|torrent)$'

  if [[ $1 == '-bimg' ]]
  then
    #echo "find ./ -type f | ack -i \"${badImg}\""
    find ./ -type f | ack -i "${badImg}"
    return
  fi

  if [[ $1 == '-empty' ]]
   then
     find ./ -type f | ack -i "/[^./]+$"
     return
   fi

  rx='\.('

  # shellcheck disable=SC2068
  for a in $@
  do
    if [[ $rx != '\.(' ]]
    then
      rx="${rx}|"
    fi
    rx="${rx}${a}"
  done

  rx="${rx})$"
  #echo "find ./ -type f | ack \"${rx}\""
  find ./ -type f | ack -i "${rx}"
}

function touchFiles() {
  rec=''
  root=$1

  if [[ "$*" == *"-r"* ]]
  then
      rec='-r'
  fi

  if [[ ! -d $root ]]
  then
    echo invalid path
    return
  fi

  if [[ $rec == '-r' ]]
  then
#    echo recurse
    find "$root" -type f -exec touch {} +
  else
#    echo top
    find "$root" -maxdepth 1  -type f -exec touch {} +
  fi
}
